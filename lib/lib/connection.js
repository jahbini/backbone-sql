// Generated by CoffeeScript 1.9.2

/*
  backbone-sql.js 0.6.5
  Copyright (c) 2013 Vidigami - https://github.com/vidigami/backbone-sql
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

(function() {
  var Connection, ConnectionPool, DatabaseURL, Knex, KnexConnection, Queue, Utils, _, ref;

  Knex = require('knex');

  ref = require('backbone-orm'), _ = ref._, Queue = ref.Queue, DatabaseURL = ref.DatabaseURL, ConnectionPool = ref.ConnectionPool;

  Utils = require('./utils');

  KnexConnection = (function() {
    function KnexConnection(knex1) {
      this.knex = knex1;
    }

    KnexConnection.prototype.destroy = function() {};

    return KnexConnection;

  })();

  module.exports = Connection = (function() {
    function Connection(full_url) {
      var connection_info, database_url, knex, protocol;
      database_url = new DatabaseURL(full_url);
      this.url = database_url.format({
        exclude_table: true,
        exclude_query: true
      });
      if ((this.knex_connection = ConnectionPool.get(this.url))) {
        return;
      }
      if (!(protocol = Utils.protocolType(database_url))) {
        throw "Unrecognized sql variant: " + full_url + " for protocol: " + database_url.protocol;
      }
      if (protocol === 'sqlite3') {
        connection_info = {
          filename: database_url.host || ':memory:'
        };
      } else {
        connection_info = _.extend({
          host: database_url.hostname,
          database: database_url.database,
          charset: 'utf8'
        }, database_url.parseAuth() || {});
      }
      knex = Knex.initialize({
        client: protocol,
        connection: connection_info
      });
      ConnectionPool.set(this.url, this.knex_connection = new KnexConnection(knex));
    }

    Connection.prototype.knex = function() {
      var ref1;
      return (ref1 = this.knex_connection) != null ? ref1.knex : void 0;
    };

    return Connection;

  })();

}).call(this);
